{"version":3,"sources":["components/AddItemForm/AddItemForm.module.scss","components/Tasks/EditableSpan.module.scss","components/Tasks/Tasks.module.scss","components/AddItemForm/AddItemForm.tsx","components/Tasks/EditableSpan.tsx","components/Tasks/Tasks.tsx","components/HashTags/Tag.tsx","components/HashTags/Tags.tsx","App.tsx","index.tsx","components/HashTags/Tags.module.scss","App.module.scss"],"names":["module","exports","AddItemForm","onAddTask","useState","title","setTitle","className","s","container","placeholder","value","onChange","e","currentTarget","type","onClick","EditableSpan","taskId","editMode","setEditMode","text","setText","useEffect","onDoubleClick","autoFocus","onBlur","Tasks","tasks","onDeleteTask","onChangeTaskTitle","map","i","id","Tag","onTagDelete","onTagFilter","style","paddingLeft","paddingTop","display","cursor","Tags","tags","wrapper","marginRight","index","App","JSON","parse","localStorage","getItem","setTasks","filter","setFilter","setItem","stringify","filteredTasks","includes","Array","from","Set","split","flat","v1","tag","newTasks","t","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d941b20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddItemForm_container__vEXWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditableSpan_container__1y5-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2mnUs\"};","import {ChangeEvent, useState} from \"react\";\r\nimport s from './AddItemForm.module.scss'\r\n\r\ntype PropsType = {\r\n    onAddTask: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = ({onAddTask}: PropsType) => {\r\n\r\n    const [title, setTitle] = useState<string>('')\r\n\r\n    const handleAddTask = () => {\r\n        onAddTask(title)\r\n        setTitle('')\r\n    }\r\n    const handleSetTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return <div className={s.container}>\r\n\r\n        <input\r\n            placeholder='Добавьте Заметку'\r\n            value={title}\r\n            onChange={handleSetTitle}\r\n            type='text'\r\n        />\r\n\r\n        <button onClick={handleAddTask}>addNote</button>\r\n    </div>\r\n}\r\n","import {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './EditableSpan.module.scss'\r\n\r\ntype PropsType = {\r\n    title: string\r\n    taskId: string\r\n    onChange: (taskId: string, newTitle: string) => void\r\n\r\n}\r\nexport const EditableSpan = ({\r\n                                 title,\r\n                                 onChange,\r\n                                 taskId,\r\n\r\n                             }: PropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [text, setText] = useState(title)\r\n    useEffect(() => {\r\n        setText(title)\r\n    }, [title])\r\n\r\n    const handleTaskTitleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setText(e.currentTarget.value)\r\n    }\r\n    const handleEditModeChange = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const disableEditMode = () => {\r\n        setEditMode(false)\r\n        onChange(taskId, text)\r\n    }\r\n\r\n    return <div onDoubleClick={handleEditModeChange} className={s.container}>\r\n        {\r\n            editMode\r\n                ? <textarea\r\n                    value={text}\r\n                    autoFocus={true}\r\n                    onBlur={disableEditMode}\r\n                    onChange={handleTaskTitleChange}\r\n                />\r\n\r\n                : <span>{text}</span>\r\n        }\r\n    </div>\r\n}\r\n","import {StateType} from \"../../App\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport s from './Tasks.module.scss'\r\n\r\ntype PropsType = {\r\n    tasks: StateType[]\r\n    onDeleteTask: (taskId: string) => void\r\n    onChangeTaskTitle: (taskId: string, newTitle: string) => void\r\n}\r\nexport const Tasks = ({\r\n                          tasks,\r\n                          onDeleteTask,\r\n                          onChangeTaskTitle,\r\n\r\n\r\n                      }: PropsType) => {\r\n\r\n\r\n    return <ul className={s.container}>\r\n        {\r\n            tasks.map(\r\n                (i) => {\r\n\r\n                    return <li key={i.id} >\r\n\r\n                        <EditableSpan\r\n                            title={i.title}\r\n                            taskId={i.id}\r\n                            onChange={onChangeTaskTitle}\r\n\r\n                        />\r\n\r\n                        <button onClick={() => onDeleteTask(i.id)}>delete</button>\r\n                    </li>\r\n                })\r\n        }\r\n    </ul>\r\n}\r\n","type PropsType = {\r\n    title: string\r\n    onTagDelete: (tag: string) => void\r\n    onTagFilter: (tag: string) => void\r\n\r\n}\r\nexport const Tag = ({\r\n                        title,\r\n                        onTagDelete,\r\n                        onTagFilter,\r\n\r\n                    }: PropsType) => {\r\n    return <div style={{paddingLeft: '10px', paddingTop: '10px', display: \"flex\", cursor: \"pointer\"}}>\r\n        <div onClick={() => onTagFilter(title)}>\r\n            {title}\r\n        </div>\r\n        <button onClick={() => onTagDelete(title)}>x</button>\r\n    </div>\r\n\r\n}","import React from \"react\";\r\nimport {Tag} from \"./Tag\";\r\nimport s from './Tags.module.scss'\r\n\r\n\r\ntype PropsType = {\r\n    tags: string[]\r\n    onTagDelete: (tag: string) => void\r\n    onTagFilter: (tag: string) => void\r\n}\r\nexport const Tags = ({\r\n                         tags,\r\n                         onTagDelete,\r\n                         onTagFilter,\r\n\r\n\r\n                     }: PropsType) => {\r\n\r\n    return <div className={s.container}>\r\n\r\n        <div className={s.wrapper}>\r\n            <div onClick={() => onTagFilter('')}\r\n                 style={{paddingTop: '10px', marginRight: '20px', cursor: \"pointer\"}}>#all\r\n            </div>\r\n            {tags.map(\r\n                (i, index) =>\r\n                    <Tag\r\n                        key={index}\r\n                        title={i}\r\n                        onTagDelete={onTagDelete}\r\n                        onTagFilter={onTagFilter}\r\n                    />\r\n            )}\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {v1} from \"uuid\";\r\nimport {AddItemForm} from \"./components/AddItemForm/AddItemForm\";\r\nimport {Tasks} from \"./components/Tasks/Tasks\";\r\nimport {Tags} from \"./components/HashTags/Tags\";\r\nimport s from './App.module.scss'\r\n\r\n\r\nexport type StateType = {\r\n    title: string,\r\n    id: string,\r\n}\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const [tasks, setTasks] = useState<StateType[]>(JSON.parse(localStorage.getItem('tasks')!))\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n    const handleAddTask = (title: string) => {\r\n        setTasks([{title, id: v1()}, ...tasks])\r\n    }\r\n    const handleDeleteTask = (taskId: string) => {\r\n        setTasks(tasks.filter(i => i.id !== taskId))\r\n    }\r\n    const handleChangeTaskTitle = (taskId: string, title: string) => {\r\n        setTasks(tasks.map((i) => i.id === taskId ? {...i, title} : i))\r\n    }\r\n    const handleTagDelete = (tag: string) => {\r\n        const newTasks = tasks.map((t) => {\r\n            t.title = t.title.replace(tag, '')\r\n            return t\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n    const handleChangeFilter = (tag: string) => {\r\n        setFilter(tag)\r\n    }\r\n    let filteredTasks = tasks.filter((i) => i.title.includes(filter))\r\n\r\n    if (filter === '') {\r\n        filteredTasks = tasks\r\n    }\r\n    /* Разделяем название тасок по пробелу, фильтруем по наличию решетки,\r\n     удаляем дубликаты с помощью Set ,*/\r\n    const tags = Array.from(new Set(tasks.map((i) =>\r\n        i.title.split(' ').filter(text => text[0] === '#')).flat()))\r\n\r\n\r\n    return <div className={s.container}>\r\n        <h1>NoteBook</h1>\r\n\r\n        <AddItemForm\r\n            onAddTask={handleAddTask}\r\n        />\r\n\r\n\r\n        <div className={s.wrapper}>\r\n            <Tags\r\n                tags={tags}\r\n                onTagDelete={handleTagDelete}\r\n                onTagFilter={handleChangeFilter}\r\n            />\r\n        </div>\r\n        <Tasks\r\n            tasks={filteredTasks}\r\n            onDeleteTask={handleDeleteTask}\r\n            onChangeTaskTitle={handleChangeTaskTitle}\r\n        />\r\n\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from \"./App\";\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tags_container__2mJWb\",\"wrapper\":\"Tags_wrapper__COeHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__VJWl9\",\"wrapper\":\"App_wrapper__3m2Yn\"};"],"sourceRoot":""}